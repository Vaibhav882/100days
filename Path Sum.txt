/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool checkPathSum(TreeNode* root, int sum, int accu) {
        if ((root->left == NULL) && (root->right == NULL)) {
            if (accu + root->val == sum)
                return true;
            else
                return false;
        } else if (root->left == NULL) {
            return checkPathSum(root->right, sum, accu+root->val);
        } else if (root->right == NULL) {
            return checkPathSum(root->left, sum, accu+root->val);
        } else {
            return ((checkPathSum(root->left, sum, accu+root->val) || (checkPathSum(root->right, sum, accu+root->val))));
        }
        
    }
    bool hasPathSum(TreeNode* root, int sum) {
        if (root == NULL)
            return false;
        return checkPathSum(root, sum, 0);
    }
};
     Output:-
Your input :-    [5,4,8,11,null,13,4,7,2,null,null,null,1]
	       22
Output :-          true
Expected :-     true