class MyQueue {
public:
     stack<int> inStack;
    stack<int> outStack;
 
	public:
		MyQueue()
		{
		}
		void push(int x)
		{
		        inStack.push(x);
		}

		int pop()
		{
	                       if (!outStack.empty())
            		     {   
                                             int t = outStack.top();
	                           outStack.pop();
		         return t;
                                        }
                                        else{
		            while (!inStack.empty())
		            {
			  int t = inStack.top();
			  inStack.pop();
			  outStack.push(t);
		            }
                
                                               int t = outStack.top();
		            outStack.pop();
		            return t;
		     }
			
		}
                                   int peek()
		{ 
                                        if (!outStack.empty())
                                         {
                                             int t = outStack.top();
		          return t;
                                        }
            		     else{
		             while (!inStack.empty())
		             {
			      int t = inStack.top();
			      inStack.pop();
			      outStack.push(t);
		             }
                
                                                          int t = outStack.top();
			    return t;
		      }
		}
 
		bool empty()
		{
		         if (outStack.empty() && inStack.empty())
		               return true;
		         return false;
		}
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
      Output:-
Your input :-  ["MyQueue","push","push","peek","pop","empty"]
	     [[],[1],[2],[],[],[]]
Output :-        [null,null,null,1,1,false]
Expected :-   [null,null,null,1,1,false] 